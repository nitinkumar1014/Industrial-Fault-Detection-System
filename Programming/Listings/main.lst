C51 COMPILER V9.60.0.0   MAIN                                                              12/27/2022 13:31:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\Softwares\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "header.h"
   2          
   3          #define Set_Point 45
   4          #define Password 06
   5          
   6          void Ext_Int (void) interrupt 0 {
   7   1        U8 Entered_Password, Saved_Password, New_Temp;
   8   1        U8 Count = 0;
   9   1        
  10   1        //Storing Password
  11   1        I2C_Byte_Write_Frame(0xA0, 0x50, Password);
  12   1        
  13   1        Start:  
  14   1          LCD_Init();
  15   1          CMD_LCD(0x80);
  16   1          Write_Str_LCD("ENTER PASSWORD: ");
  17   1          Entered_Password = Key_Scan();
  18   1          Saved_Password = I2C_Byte_Read_Frame(0xA0, 0x50);
  19   1          Write_Char_LCD(Entered_Password);
  20   1          Delay_ms(100);
  21   1          CMD_LCD(0x01);
  22   1          Delay_ms(100);
  23   1          if (Entered_Password == Saved_Password) {
  24   2            CMD_LCD(0x80);
  25   2            Write_Str_LCD("SET NEW TEMP: ");
  26   2            CMD_LCD(0xC0);
  27   2            New_Temp = Key_Scan();
  28   2            Write_Char_LCD(New_Temp);
  29   2            I2C_Byte_Write_Frame(0xA0, 0x80, New_Temp);
  30   2            Count = 0;
  31   2            Delay_ms(100);
  32   2            CMD_LCD(0x01);
  33   2            CMD_LCD(0x80);
  34   2            Write_Str_LCD("TEMP UPDATED! ");
  35   2            CMD_LCD(0xC0);
  36   2          }
  37   1          else if (Count < 3){
  38   2            Count++;
  39   2            CMD_LCD(0x80);
  40   2            Write_Str_LCD("WRONG PASSWORD");
  41   2            Delay_ms(500);
  42   2            CMD_LCD(0x01);
  43   2            CMD_LCD(0x80);
  44   2            Write_Str_LCD("TRY AGAIN !!");
  45   2            Delay_ms(500);
  46   2            CMD_LCD(0x01);
  47   2            goto Start;
  48   2          }
  49   1          else if (Count == 3) {
  50   2            Delay_ms(500);
  51   2            CMD_LCD(0x80);
  52   2            Write_Str_LCD("3 TRIALS OVER");
  53   2            Delay_ms(10);
  54   2            CMD_LCD(0xC0);
C51 COMPILER V9.60.0.0   MAIN                                                              12/27/2022 13:31:03 PAGE 2   

  55   2            Write_Str_LCD("WAIT FOR 30 SEC");
  56   2            Delay_ms(30000);
  57   2            CMD_LCD(0x01);
  58   2            Count = 0;
  59   2            goto Start;
  60   2          }
  61   1      }
  62          
  63          void main () {
  64   1        F32 Analog_R;
  65   1        U8 Temp, Check_Temp;
  66   1        
  67   1        IE = 0x81;
  68   1        IT0 = 0;
  69   1        
  70   1        LCD_Init();
  71   1        //Storing Temperature
  72   1        I2C_Byte_Write_Frame(0xA0, 0x80, Set_Point);
  73   1        
  74   1        while (1) {
  75   2          Check_Temp = I2C_Byte_Read_Frame(0xA0, 0x80);
  76   2          CMD_LCD(0x01);
  77   2          Delay_ms(20);
  78   2          CMD_LCD(0x80);
  79   2          Write_Str_LCD("CURRENT TEMP: ");
  80   2          Delay_ms(150);
  81   2          CMD_LCD(0x0C);
  82   2          Delay_ms(150);
  83   2          
  84   2          
  85   2          Analog_R = ADC_Read(); //Hexa-decimal
  86   2          Temp = Analog_R / 8.3; // Decimal
  87   2          CMD_LCD(0xC5);
  88   2          Write_Int_LCD(Temp);
  89   2          Data_LCD(223);
  90   2          Write_Str_LCD("C");
  91   2          CMD_LCD(0x0C);
  92   2          
  93   2          if (Temp <= Check_Temp)
  94   2            Green_LED(ON);
  95   2          else
  96   2            Red_LED(ON);
  97   2          Delay_ms(500);
  98   2          Green_LED(OFF);
  99   2          Red_LED(OFF);
 100   2          Delay_ms(500);
 101   2        }
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    509    ----
   CONSTANT SIZE    =    122    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
