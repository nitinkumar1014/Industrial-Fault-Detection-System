C51 COMPILER V9.60.0.0   I2C_FIELDS                                                        12/27/2022 13:31:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C_FIELDS
OBJECT MODULE PLACED IN .\Objects\I2C_Fields.obj
COMPILER INVOKED BY: F:\Softwares\Keil\C51\BIN\C51.EXE I2C_Fields.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\I2C_Fields.lst) TABS(2) OBJECT(.\Objects\I2C_Fields.obj)

line level    source

   1          #include "header.h"
   2          #include <intrins.h>
   3          
   4          sbit SCL = P3^6;
   5          sbit SDA = P3^7;
   6          
   7          void I2C_Start (void) {
   8   1        //Ideal Condition
   9   1        SCL = SET;
  10   1        SDA = SET;
  11   1        
  12   1        //I2C Start
  13   1        SCL = SET; //Default status of SCL line
  14   1        SDA = SET; //Default status of SDA line
  15   1        SDA = CLEAR; //Change the state of SDA from High to Low to issue the start of events
  16   1      }
  17          
  18          void I2C_Stop (void) {
  19   1        SCL = CLEAR; //To change status, SCl and SDA are made Low  during communication
  20   1        SDA = CLEAR;
  21   1        SCL = SET; //SCL line is released
  22   1        SDA = SET; //SDA is raised from Low to Hiigh to issue stop condition
  23   1      }
  24          
  25          void I2C_Write (U8 Data) {
  26   1        S8 i;
  27   1        for (i = 7; i >= 0; i--) {
  28   2          SCL = CLEAR; //To allow change of Bit status across SDA line
  29   2          SDA = (Data >> i) & 1; //Serialize - out Data MSB to LSB changing SDA line accordingly
  30   2          SCL = SET; //Release SCL so that slave can check/read/monitor Bit received across
  31   2        }
  32   1      }
  33          
  34          bit I2C_Acknowledgement (void) {
  35   1      
  36   1        SCL = CLEAR; //Master make SCL = 0 to change SDA to High/Release SDA
  37   1        SDA = SET; //Master is releasing SDA, so that slave can pull down SDA for +Acknowledgement
  38   1        SCL = SET; //Master releases SCL too
  39   1        _nop_();
  40   1        _nop_();
  41   1        _nop_();
  42   1        _nop_();
  43   1        if (SDA == CLEAR) {
  44   2          SCL = CLEAR;
  45   2          return CLEAR;  //means Acknowledgement from Slave
  46   2        }
  47   1        else {
  48   2          SCL = CLEAR;
  49   2          return SET; //means no Acknowledgement from Slave
  50   2        }
  51   1      }
  52          
  53          U8 I2C_Read (void) {
  54   1        S8 i;
C51 COMPILER V9.60.0.0   I2C_FIELDS                                                        12/27/2022 13:31:04 PAGE 2   

  55   1        U8 Temp = 0;
  56   1        
  57   1        for (i = 7; i >= 0; i--) {
  58   2          SCL = CLEAR;
  59   2          SCL = SET;
  60   2          if (SDA == SET)
  61   2            Temp = Temp | (1 << i);
  62   2        }
  63   1        return Temp;
  64   1      }
  65          
  66          void I2C_No_Acknowledgement (void) {
  67   1        SCL = SET;
  68   1        SDA = SET;
  69   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
